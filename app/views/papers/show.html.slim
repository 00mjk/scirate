- provide :title, @paper.title
- provide :description, @paper.abstract

#paperPage.container
  .paper.row
    .col-md-12
      - cache [:paper_title, @paper] do
        .row.title-row.tex2jax
          .col-md-10
            h1.title= @paper.title
          .col-md-2
            div.scite-toggle> data-paper-uid=(@paper.uid)
              button.btn.unscite.btn-success title="Unscite this paper"
                | Scited

              button.btn.btn-default.scite title="Scite this paper if you find it interesting"
                | Scite!

              .scites-count
                a href="/arxiv/#{@paper.uid}/scites" title="Number of Scites"
                button.btn.btn-default.count= @paper.scites_count
            a.paper-download.btn.btn-success href=(@paper.pdf_url) title="Download PDF" PDF

      hr

      - cache [:paper_main, @paper] do
        .row
          .col-md-9
            ul.authors
              - @authors.each do |author|
                li>
                  = author_link_to(author, @paper) + (author != @authors[-1] ? ',' : '')
            .abstract.tex2jax
              = @paper.abstract
            .dates
              | Submitted #{@paper.submit_date.to_date.to_formatted_s(:rfc822)} to
              strong<= @feeds[0].fullname
              |  [#{link_to @feeds[0].uid, @feeds[0]}]
              br
              | Published #{@paper.pubdate.to_date.to_formatted_s(:rfc822)}
              - if @paper.updated?
                br
                |  Updated #{@paper.update_date.to_date.to_formatted_s(:rfc822)}
            - if @paper.categories.length > 1
              .categories
                | Subjects:
                - @feeds.each do |feed|
                  a> href="/arxiv/#{feed.uid}" = feed.uid
            - [:author_comments, :msc_class, :report_no, :journal_ref, :doi, :proxy].each do |field|
              - unless @paper.send(field).nil?
                = field.to_s.gsub('_', ' ').capitalize
                | : #{@paper.send(field)}
                br
            = link_to @paper.abs_url, @paper.abs_url
            br
              = link_to @paper.pdf_url, @paper.pdf_url
              - if @paper.scites_count > 0
                .scites
                  strong
                    | Scited by:
                  - @sciters.each_with_index do |user, i|
                    a< href="/#{user.username}" = user.fullname
                    - if i != @paper.scites_count-1
                      | ,
          .col-md-3
            .reference
              ul.nav.nav-tabs
                li.active
                  a BibTeX
              textarea.bibtex= @paper.to_bibtex
              button#copyButton.btn.btn-default Copy Citation

      .comments
        a name="comments"
        h4= pluralize(@comments.size, "comment")
        - if flash[:comment]
          div class="alert alert-#{flash[:comment][:status]}"
            button.close data-dismiss="alert" type="button"
            = raw flash[:comment][:raw]
            = flash[:comment][:content]
        .comment-list
          - cache [:paper_comments, @comments, current_user]
            = render @comments

          - if current_user && current_user.is_moderator?
            - @deleted_comments = Comment.where(paper_uid: @paper.uid, deleted: true)
            - if @deleted_comments.length > 0
              h4= status_warning + ' ' + pluralize(@deleted_comments.length, "deleted comment")
              = render partial: "comments/deleted_comment", collection: @deleted_comments

      .comment-form
        - if signed_in?
          = render 'comment_form'
        - else
          = link_to "sign in to comment", login_path
