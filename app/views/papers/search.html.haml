- provide :title, "Search results"

.container#search_page
  %h1 Search Scirate
  #advanced_search_form
    = form_tag(papers_search_path, method: :get) do |f|
      %table.table.table-striped
        %tr
          %td= label_tag :authors, "Author(s)"
          %td= text_field_tag :authors, @search.authors.join(',')
          %td Comma-separated author names
        %tr
          %td= label_tag :title, "Title"
          %td= text_field_tag :title, @search.field_terms[:title]
          %td Contents of paper title
        %tr
          %td= label_tag :abstract, "Abstract"
          %td= text_field_tag :abstract, @search.field_terms[:abstract]
          %td Contents of paper abstract
        %tr
          %td= label_tag :feed, "Category"
          %td
            %select#folder{ name: 'folder' }
              %option{ value: 'all' } (all)
              %optgroup{ label: 'arXiv.org' }
                - Feed.arxiv_folders.each do |folder|
                  %option{ value: folder.id, selected: folder.id == @folder_id }= folder.fullname
          %td Search a particular category feed
        %tr
          %td= label_tag :subfeed, "Subcategory"
          %td
            - Feed.arxiv_folders.each do |folder|
              %select.hidden{ id: "feed_#{folder.id}", class: 'feed', name: 'feed', disabled: true }
                %option{ value: folder.name } (all)
                - folder.children.each do |feed|
                  %option{ value: feed.name, selected: feed == @search.feed }= feed.fullname
          %td Search a subcategory
        %tr
          %td= label_tag :general, "General"
          %td= text_field_tag :general, @search.general_term
          %td All available paper metadata


      .field
        = submit_tag "Search"

  %h3
    Results for #{@query}
  - unless @authors.nil? || @authors.empty?
    Matching authors:
    - @authors.each do |author|
      = link_to author.fullname, "/search?q=au:#{author.searchterm}"
      - unless author == @authors[-1]
        ,
  .paperlist
    %ul.papers
      - if @papers.empty?
        No papers found.
      - else
        = render @papers
  = will_paginate @papers
